post:
  operationId: PostProducts
  summary: Create a Product
  x-authenticated: true
  description: Creates a Product
  requestBody:
    content:
      application/json:
        schema:
          $ref: ../components/schemas/AdminPostProductsReq.yaml
  x-codeSamples:
    - lang: JavaScript
      label: JS Client
      source:
        $ref: ../code_samples/JavaScript/products/postundefined
    - lang: Shell
      label: cURL
      source:
        $ref: ../code_samples/Shell/products/postundefined
  security:
    - api_token: []
    - cookie_auth: []
  tags:
    - Product
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              product:
                $ref: ../components/schemas/Product.yaml
    '400':
      $ref: ../components/responses/400_error.yaml
    '401':
      $ref: ../components/responses/unauthorized.yaml
    '404':
      $ref: ../components/responses/not_found_error.yaml
    '409':
      $ref: ../components/responses/invalid_state_error.yaml
    '422':
      $ref: ../components/responses/invalid_request_error.yaml
    '500':
      $ref: ../components/responses/500_error.yaml
get:
  operationId: GetProducts
  summary: List Products
  description: Retrieves a list of Product
  x-authenticated: true
  parameters:
    - in: query
      name: q
      description: >-
        Query used for searching product title and description, variant title
        and sku, and collection title.
      schema:
        type: string
    - in: query
      name: discount_condition_id
      description: The discount condition id on which to filter the product.
      schema:
        type: string
    - in: query
      name: id
      style: form
      explode: false
      description: Filter by product IDs.
      schema:
        oneOf:
          - type: string
            description: ID of the product to search for.
          - type: array
            items:
              type: string
              description: ID of a product.
    - in: query
      name: status
      style: form
      explode: false
      description: Status to search for
      schema:
        type: array
        items:
          type: string
          enum:
            - draft
            - proposed
            - published
            - rejected
    - in: query
      name: collection_id
      style: form
      explode: false
      description: Collection ids to search for.
      schema:
        type: array
        items:
          type: string
    - in: query
      name: tags
      style: form
      explode: false
      description: Tag IDs to search for
      schema:
        type: array
        items:
          type: string
    - in: query
      name: price_list_id
      style: form
      explode: false
      description: Price List IDs to search for
      schema:
        type: array
        items:
          type: string
    - in: query
      name: sales_channel_id
      style: form
      explode: false
      description: Sales Channel IDs to filter products by
      schema:
        type: array
        items:
          type: string
    - in: query
      name: type_id
      style: form
      explode: false
      description: Type IDs to filter products by
      schema:
        type: array
        items:
          type: string
    - in: query
      name: title
      description: title to search for.
      schema:
        type: string
    - in: query
      name: description
      description: description to search for.
      schema:
        type: string
    - in: query
      name: handle
      description: handle to search for.
      schema:
        type: string
    - in: query
      name: is_giftcard
      description: Search for giftcards using is_giftcard=true.
      schema:
        type: boolean
    - in: query
      name: created_at
      description: Date comparison for when resulting products were created.
      schema:
        type: object
        properties:
          lt:
            type: string
            description: filter by dates less than this date
            format: date
          gt:
            type: string
            description: filter by dates greater than this date
            format: date
          lte:
            type: string
            description: filter by dates less than or equal to this date
            format: date
          gte:
            type: string
            description: filter by dates greater than or equal to this date
            format: date
    - in: query
      name: updated_at
      description: Date comparison for when resulting products were updated.
      schema:
        type: object
        properties:
          lt:
            type: string
            description: filter by dates less than this date
            format: date
          gt:
            type: string
            description: filter by dates greater than this date
            format: date
          lte:
            type: string
            description: filter by dates less than or equal to this date
            format: date
          gte:
            type: string
            description: filter by dates greater than or equal to this date
            format: date
    - in: query
      name: deleted_at
      description: Date comparison for when resulting products were deleted.
      schema:
        type: object
        properties:
          lt:
            type: string
            description: filter by dates less than this date
            format: date
          gt:
            type: string
            description: filter by dates greater than this date
            format: date
          lte:
            type: string
            description: filter by dates less than or equal to this date
            format: date
          gte:
            type: string
            description: filter by dates greater than or equal to this date
            format: date
    - in: query
      name: offset
      description: How many products to skip in the result.
      schema:
        type: integer
        default: 0
    - in: query
      name: limit
      description: Limit the number of products returned.
      schema:
        type: integer
        default: 50
    - in: query
      name: expand
      description: >-
        (Comma separated) Which fields should be expanded in each product of the
        result.
      schema:
        type: string
    - in: query
      name: fields
      description: >-
        (Comma separated) Which fields should be included in each product of the
        result.
      schema:
        type: string
    - in: query
      name: order
      description: the field used to order the products.
      schema:
        type: string
  x-codeSamples:
    - lang: JavaScript
      label: JS Client
      source:
        $ref: ../code_samples/JavaScript/products/getundefined
    - lang: Shell
      label: cURL
      source:
        $ref: ../code_samples/Shell/products/getundefined
  security:
    - api_token: []
    - cookie_auth: []
  tags:
    - Product
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              products:
                type: array
                items:
                  $ref: ../components/schemas/Product.yaml
              count:
                type: integer
                description: The total number of items available
              offset:
                type: integer
                description: The number of items skipped before these items
              limit:
                type: integer
                description: The number of items per page
    '400':
      $ref: ../components/responses/400_error.yaml
    '401':
      $ref: ../components/responses/unauthorized.yaml
    '404':
      $ref: ../components/responses/not_found_error.yaml
    '409':
      $ref: ../components/responses/invalid_state_error.yaml
    '422':
      $ref: ../components/responses/invalid_request_error.yaml
    '500':
      $ref: ../components/responses/500_error.yaml
